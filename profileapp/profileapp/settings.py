"""
Django settings for profileapp project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from typing import List
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool, default=False)


def _parse_allowed_hosts(raw_hosts: str) -> List[str]:
    """Parse a comma-separated list of allowed hosts into a clean list."""

    hosts = [host.strip() for host in raw_hosts.split(',') if host.strip()]
    return hosts or ['*']


ALLOWED_HOSTS = _parse_allowed_hosts(config('ALLOWED_HOSTS', default='*'))

# ALLOWED_HOSTS = ['192.168.1.5', '127.0.0.1', 'capstone-app-profile.onrender.com', '*']

# Application definition
SITE_ID = 2
# SITE_URL = 'http://127.0.0.1:8000'
# SITE_URL = 'https://capstone-app-profile.onrender.com/'
SITE_URL = config(
    'SITE_URL',
    default='https://capstone-app-profile-production.up.railway.app',
)

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'jazzmin',
    'django.contrib.admin',
    
    # 'crispy_forms',
    'crispy_bootstrap5',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',   
    'allauth.socialaccount.providers.facebook',
    'profiling',
    'support',
    'geolocations',
    'events',
    # 'pwa',
]

# Social account providers settings
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    },

    'facebook': {
        'METHOD': 'oauth2',
        'SDK_URL': '//connect.facebook.net/{locale}/sdk.js',
        'SCOPE': ['email', 'public_profile'],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'INIT_PARAMS': {'cookie': True},
        'FIELDS': [
            'id',
            'email',
            'name',
            'first_name',
            'last_name',
            'gender',
        ],
        'EXCHANGE_TOKEN': True,
        'VERIFIED_EMAIL': False,
        'VERSION': 'v7.0',
    }
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'profiling.middleware.LogRequestMiddleware',  # Add your middleware here

]

ROOT_URLCONF = 'profileapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'profileapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DB_ENGINE = config('DB_ENGINE', default='django.db.backends.sqlite3')

if DB_ENGINE == 'django.db.backends.sqlite3':
    DATABASES = {
        'default': {
            'ENGINE': DB_ENGINE,
            'NAME': config('DB_NAME', default=str(BASE_DIR / 'db.sqlite3')),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': DB_ENGINE,
            'NAME': config('DB_NAME'),
            'USER': config('DB_USER'),
            'PASSWORD': config('DB_PASSWORD'),
            'HOST': config('DB_HOST'),
            'PORT': config('DB_PORT', cast=int),
            'CONN_MAX_AGE': config('DB_CONN_MAX_AGE', cast=int, default=600),
        }
    }

    db_options = config('DB_OPTIONS', default='')
    if db_options:
        DATABASES['default']['OPTIONS'] = {'options': db_options}

    
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Singapore'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
if not DEBUG:    # Tell Django to copy static assets into a path called `staticfiles` (this is specific to Render)
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    # Enable the WhiteNoise storage backend, which compresses static files to reduce disk use
    # and renames the files with unique names for each version to support long-term caching

# MEDIA_ROOT = "/mnt/storage/"
# MEDIA_URL = "/media/"


MEDIA_URL = '/media/'
MEDIA_ROOT = '/mnt/storage/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default authentication backend
    'allauth.account.auth_backends.AuthenticationBackend'
]

AUTH_USER_MODEL = 'profiling.Account'

LOGIN_REDIRECT_URL  = "profile_detail"
LOGOUT_REDIRECT_URL = "/"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_VERIFICATION = 'optional'
SOCIALACCOUNT_LOGIN_ON_GET = True


EMAIL_BACKEND = config('EMAIL_BACKEND')
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool)
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

JAZZMIN_SETTINGS = {
    "site_title": "DFPS Tech - DFPS",
    "site_header": "DFPS Tech - DFPS",
    "site_brand": "DFPS Tech - DFPS",
    "login_logo": "img/favicon.ico",  # Use relative path for static
    "site_logo": "img/favicon.ico",
    "site_icon": "img/favicon.ico",
    "welcome_sign": "Admin Control Login",
    "copyright": "DFPS Tech 2024",
    "search_model": "profiling.Profile",
    "user_avatar": None,
    "show_sidebar": True,
    "navigation_expanded": False,

    # Ordering for sidebar
    "order_with_respect_to": [
        "events",
        "auth",
        "profiling",
        "geolocations",
        "support",
        "sites",
        "socialaccount",
    ],

    "icons": {
        #Auth
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        #Events
        "events.Event": "fas fa-calendar-alt",
        "events.Announcement": "fas fa-bullhorn",
        "events.Location": "fas fa-map-marker-alt",
        "events.Attendance": "fas fa-calendar-check",

        #GeoLocations
        "geolocations.Region": "fas fa-globe",
        "geolocations.Province": "fas fa-map",
        "geolocations.City": "fas fa-city",
        "geolocations.Barangay": "fas fa-home",
        "geolocations.Barangay": "fas fa-home",

        #Profiling
        "profiling.Account": "fas fa-user",
        "profiling.Tag": "fas fa-tag",
        "profiling.Project": "fas fa-briefcase",
        "profiling.Profile": "fas fa-address-card",

        "profiling.Language": "fas fa-language",
        "profiling.Affiliation": "fas fa-handshake",
        "profiling.Skills": "fas fa-tools",
        "profiling.Specialization": "fas fa-user-graduate",
        "profiling.Pastexperience": "fas fa-history",
        "profiling.BackgroundInformation": "fas fa-info-circle",
        "profiling.Resume": "fas fa-file-alt",

        #Support
        "support.Supportticket": "fas fa-ticket-alt",
        "support.Message": "fas fa-envelope",
        "support.Notification": "fas fa-bell",
        "sites.Site": "fas fa-globe",  # Icon for Sites model
        "socialaccount.SocialAccount": "fas fa-share-alt",   # Social Account icon
        "socialaccount.SocialApp": "fas fa-share-alt",           # Social App icon
        "socialaccount.SocialToken": "fas fa-key",          # Social Token icon

    },

    # Default icons for navigation tree
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    # Links in the top menu
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"app": "profiling"},
        {"model": "profiling.Profile"},
    ],

    # Links in the user menu
    "usermenu_links": [
        {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},
    ],

    # Optional settings
    "custom_css": None,  # Use static/css/custom.css for custom styles
    "custom_js": "js/custom_sidebar.js",
    "use_google_fonts_cdn": True,
    "show_ui_builder": False,
    "changeform_format": "horizontal_tabs",
    "changeform_format_overrides": {
        "auth.user": "collapsible",
        "auth.group": "vertical_tabs",
    },

    "related_modal_active": False,
}



CSRF_TRUSTED_ORIGINS = [
    "https://capstone-app-profile-production.up.railway.app",
]
